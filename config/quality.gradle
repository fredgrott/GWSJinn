/*
 Copyright (C) 2015 Fred Grott(aka shareme GrottWorkShop)

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and limitations under License.
 */


/*
Note: App module has product flavors and the library module doe not have any product flavors.
      Thus, we need to check for the specific android app or library plugin and deliver the appropriate
      android block to denote the qa plugin configuration and the task.

      We can accomplish this by using a subprojects block and loading this gradle snippet at the root
      build script. This way we can add specialized qa tasks specific to the app module or the library
      module in one place, if we need to at some point.

      Remember, javaNCSS is not a gradle-ized task and thus it and possibly android lint have no hooks
      to appear in the full gradle project dashboard generated by that plugin. At some point we have to
      create our own dashboard that parses the xml and collates all the stuff into one report that allows
      us to drill down as far as QA results.

      I still keep Android Lint block in the module build script for readability, etc however it does
      make sense to have the Android Lint xml configuration file grouped here.

 */



//subprojects {
//    apply plugin: 'checkstyle'
//    apply plugin: 'findbugs'
//    apply plugin: 'jdepend'
//    apply plugin: 'pmd'
//
//    configurations {
//        javaNCSS
//    }
//    dependencies {
//        checkstyle 'com.puppycrawl.tools:checkstyle:6.12.1'
//        findbugs 'com.google.code.findbugs:findbugs:3.0.1'
//        compile 'com.google.code.findbugs:annotations:3.0.1'
//        compile 'com.google.code.findbugs:jsr305:3.0.1'
//        javaNCSS 'org.codehaus.javancss:javancss:33.54'
//        jdepend 'jdepend:jdepend:2.9.1'
//        jdepend 'org.apache.ant:ant-jdepend:1.9.0'
//        pmd 'net.sourceforge.pmd:pmd:5.1.3'
//    }
//
//    def qualityConfigDir = "$project.rootDir/config/quality";
//    def reportsDir = "$project.buildDir/reports"
//
//    task checkstyle(type: Checkstyle, group: 'Verification', description: 'Runs code style checks'){
//          toolVersion = '6.12.1'
//          configFile file("$qualityConfigDir/checkstyle/checkstyle-main.xml")
//
//           source 'src'
//           include '**/*.java'
//           exclude '**/gen/**'
//           classpath = files()
//
//           reports {
//               xml.enabled = true
//                    xml {
//                         destination "$reportsDir/checkstyle/checkstyle.xml"
//                      }
//             }
//           doLast{
//              ant.xsl(in:"$reporting.baseDir/checkstyle/checkstyle-main.xml",
//                      style:"$qualityConfigDir/checkstyle/checkstyle-noframes.xsl",
//                      out:"$reporting.baseDir/checkstyle/checkstyle-main.html")
//          }
//    }
//
//    task findbugs(type: FindBugs,
//              group: 'Verification',
//              description: 'Inspect java bytecode for bugs',
//               dependsOn: ['compileDebugSources','compileReleaseSources']) {
//              toolVersion = '3.0.1'
//              ignoreFailures = false
//               effort = "max"
//               reportLevel = "high"
//               excludeFilter = new File("$qualityConfigDir/findbugs/findbugs-filter.xml")
//               classes = files("$project.rootDir/app/build/intermediates/classes")
//
//               source 'src'
//               include '**/*.java'
//               exclude '**/gen/**'
//
//               reports {
//                 xml.enabled = true
//                 html.enabled = true
//                 xml {
//                       destination "$reportsDir/findbugs/findbugs-main.xml"
//                 }
//                 html {
//                      destination "$reportsDir/findbugs/findbugs-main.html"
//                 }
//               }
//
//             classpath = files()
//      }
//
//   task javancss(group: 'Verification', description: 'run javaNCSS analysis for main classes'){
//        def javancssDir = file("$project.buildDir/reports/javancss")
//        javancssDir.mkdirs()
//        ant {
//         taskdef(name:'javancss', classname:'javancss.JavancssAntTask', classpath:configurations.javancssConf.asPath)
//         javancss(src:'src/main/java', generateReport:'true', outputfile:"$javancssDir/javancss-main.xml", format:'xml', includes:'**/*.java')
//        }
//        doLast {
//              ant.xsl(in:"$reporting.baseDir/javancss-main.xml",
//                      style:"qualityConfigDir/javancss/javancss.xsl",
//                      out:"$reporting.baseDir/javancss/javancss-main.html")
//        }
//    }
//
//    task jdepend(type: JDepend, group: 'Verification',
//                       description: 'computes oop relationships',
//                      dependsOn: ['compileDebugSources','compileReleaseSources']){
//           toolVersion = '2.9.1'
//           source 'src'
//           include '**/*.java'
//           exclude '**/gen/**'
//           ignoreFailures = true
//           reports {
//                 xml.enabled = true
//                 text.enabled =  false
//                 xml {
//                       destination "$reportsDir/jdepend/jdepend-main.xml"
//                 }
//
//               }
//           classpath = files()
//           doLast {
//                 ant.xslt(in:"$reporting.baseDir/jdepend/jdepend-main.xml",
//                           style:"$qualityConfigDir/jdepend/jdepend-report.xslt",
//                           out:"$reporting.baseDir/jdepend/jdepend-main.html")
//                  }
//      }
//
//      task pmd(type: Pmd, group: 'Verification', description: 'Inspect sourcecode for bugs') {
//                toolVersion = '5.1.3'
//                ruleSetFiles = files("$qualityConfigDir/pmd/pmd-ruleset.xml")
//                ignoreFailures = false
//                ruleSets = []
//
//                source 'src'
//                include '**/*.java'
//                exclude '**/gen/**'
//
//                reports {
//                    xml.enabled = true
//                    html.enabled = true
//                    xml {
//                          destination "$reportsDir/pmd/pmd-main.xml"
//                    }
//                    html {
//                          destination "$reportsDir/pmd/pmd-main.html"
//                    }
//                }
//         }
// check.dependsOn(checkstyle, findbugs, javancss, jdepend, pmd)
//}