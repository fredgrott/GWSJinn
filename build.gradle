// Top-level build file where you can add configuration options common to all sub-projects/modules.
apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:1.3.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
        //godot plugin
        classpath 'de.hannesstruss:godot:0.2'
        //hugo plugin
        classpath 'com.jakewharton.hugo:hugo-plugin:1.2.1'
        //spoon plugin
        classpath 'com.stanfy.spoon:spoon-gradle-plugin:1.0.3'
        // in app modules
        // apply plugin: 'com.neenbedankt.android-apt'
        // need version 1.8 once butterknife is to 8.0.2 stable
        classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
        //classpath 'com.genymotion:plugin:1.0'
        classpath 'org.moallemi.gradle.advanced-build-version:gradle-plugin:1.5.0'
        //maven tasks for android plugin, if you use jfrog than add that too as I use jitpack instead
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.3'
        //view-inspector puts a view inspector and other debug tools in a view group
        // only accessible in the debug of an app
        classpath 'com.github.xfumihiro.view-inspector:view-inspector-plugin:0.1.0'
        // frodo plugin for rxjava testing
        classpath "com.fernandocejas.frodo:frodo-plugin:0.8.1"


    }
}

// dependencies.gradle also gets are allprojects adjustment blocks to adjust for
// google support libs being out-of-synch with support testing libs, etc.
allprojects {
    ext{
        //Configure stuff
        ourReportsDir = '${project.buildDir}/reports'
        // we use a plugin to version libraries and applications and the versioning
        // policy is usually different for both the app and library modules
        // thus we define the versions per the plugin in each individual module
        androidApplicationId = 'com.github.shareme.gwsjinn'
        testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
        testApplicationId = 'com.github.shareme.gwsjinn.test'
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
