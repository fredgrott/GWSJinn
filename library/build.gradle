/*
Copyright (C) 2015 Fred Grott(aka shareme GrottWorkShop)

Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except in
compliance with the License. You may obtain a copy of the License at

http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software distributed under the License is
distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and limitations under License.
 */
apply plugin: 'com.android.library'
apply plugin: 'de.hannesstruss.godot'
//un comment when have real lib module to upload to jitpack
apply plugin: 'com.github.dcendents.android-maven'


def libVersionCode = 1
def libVersionName = "1.0.0.0"

//okay rest of the jitpack stuff for the local maven install to work correctly
// uncomment next lines and change where appropriate
def siteUrl = 'https://github.com/shareme/GWSJinn'
def gitUrl = 'https://github.com/shareme/GWSJinn.git'
group = "com.github.shareme"
version = libVersionName


android {
    def globalConfiguration = rootProject.extensions.getByName("ext")
    compileSdkVersion globalConfiguration.getAt("androidCompileSdkVersion")
    buildToolsVersion globalConfiguration.getAt("androidBuildToolsVersion")

    defaultConfig {
        minSdkVersion globalConfiguration.getAt("androidMinSdkVersion")
        targetSdkVersion globalConfiguration.getAt("androidTargetSdkVersion")
        versionCode libVersionCode
        versionName libVersionName

    }


    /*
     Warning, multi-catch is not until android 4.4.2
     */
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_7
        targetCompatibility JavaVersion.VERSION_1_7
    }

    packagingOptions {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
    }

    aaptOptions {
        noCompress 'txt'
        ignoreAssetsPattern "!.svn:!.git:!.ds_store:!*.scc:.*:<dir>_*:!CVS:!thumbs.db:!picasa.ini:!*~"
    }



    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    // Always show the result of every unit test, even if it passes.
    testOptions{
        reportDir = "$rootProject.ext.ourReportsDir/androidTests"

        unitTests.all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }

}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    testCompile rootProject.ext.acceptanceTestingDependencies.junit
    testCompile rootProject.ext.acceptanceTestingDependencies.mockito
    testCompile rootProject.ext.acceptanceTestingDependencies.powermockJunit
    testCompile rootProject.ext.acceptanceTestingDependencies.powermockMockito
    testCompile rootProject.ext.acceptanceTestingDependencies.assertjCore

    androidTestCompile rootProject.ext.instrumentedTestDependencies.espressoRunner
    androidTestCompile rootProject.ext.instrumentedTestDependencies.espressoRules
    androidTestCompile rootProject.ext.instrumentedTestDependencies.espressoCore
    androidTestCompile (rootProject.ext.instrumentedTestDependencies.espressoContrib){
        exclude module: 'recyclerview-v7'
        exclude module: 'support-v4'

    }
    androidTestCompile (rootProject.ext.instrumentedTestDependencies.assertjAndroid){
        exclude group: 'com.android.support'
    }
    compile rootProject.ext.androidSupportDependencies.appCompat
    compile rootProject.ext.debugAppDependencies.timber
}
install {
    repositories.mavenInstaller{
        pom {
            project {
                packaging 'aar'
                name 'GWSJinn'
                url siteUrl

                licenses {
                    license{
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'shareme'
                        name 'Fred Grott'
                        email 'fred.grott@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

task sourcesJar(type: Jar){
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
task javadoc(type: Javadoc){
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}
task javadocJar(type: Jar, dependsOn: javadoc){
    classifier = 'javadoc'
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}