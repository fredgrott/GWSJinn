allprojects {
    //borrowed from Jake Wharton's gist
    //https://gist.github.com/JakeWharton/2066f5e4f08fbaaa68fd
    // ensures we do not ever use wildcards
    // if lib author has used + wildcard than its
    // resolutionStrategy.force "group:name:exact_version"
    afterEvaluate { project ->
        //noinspection GroovyAssignabilityCheck
        project.configurations.all {

            resolutionStrategy.eachDependency { DependencyResolveDetails details ->
                //noinspection GroovyAssignabilityCheck
                def requested = details.target
                if (requested.version.contains('+')) {
                    throw new GradleException("Wildcard dependency forbidden: ${requested.group}:${requested.name}:${requested.version}")
                }
            }

            //resolution strategy for support annotations being out of synch
            resolutionStrategy.force 'com.android.support:support-annotations:23.1.0'
            //resolution strategy for support libs, ie when we use rxpresso for example

        }
    }
    repositories {
        jcenter()
        //for getting libs deployed to jitpack
        maven { url "https://jitpack.io" }
    }
    tasks.withType(JavaForkOptions) {
        // Forked processes like GradleWorkerMain for tests won't steal focus!
        jvmArgs '-Djava.awt.headless=true'
    }
    // for jdk8 to avoid the R.java errors
    if (JavaVersion.current().isJava8Compatible()){
        tasks.withType(Javadoc) {
            options.addStringOption('Xdoclint:none', '-quiet')
        }
    }

}

ext {
    //android
    androidBuildToolsVersion = "23.0.2"
    androidMinSdkVersion = 16
    androidTargetSdkVersion = 23
    androidCompileSdkVersion = 23

    //android support libs
    androidSupportVersion = '23.1.0'

    androidSupportDependencies = [

            appCompat: "com.android.support:appcompat-v7:$androidSupportVersion",
            cardView: "com.android.support:cardview-v7:$androidSupportVersion",
            customTabs: "com.android.support:customtabs:$androidSupportVersion",
            design: "com.android.support:design:$androidSupportVersion",
            gridLayout: "com.android.support:gridlayout-v7:$androidSupportVersion",
            leanBack: "com.android.support:leanback-v17:$androidSupportVersion",
            mediaRouter: "com.android.support:mediarouter-v7:$androidSupportVersion",
            multidex: "com.android.support:multidex:$androidSupportVersion",
            multidexInstrumentation: "com.android.support:multidex-instrumentation:$androidSupportVersion",
            palette: "com.android.support:palette-v7:$androidSupportVersion",
            percent: "com.android.support:percent:$androidSupportVersion",
            preferenceLeanback: "com.android.support:preference-leanback-v17:$androidSupportVersion",
            preference: "com.android.support:preference-v7:$androidSupportVersion",
            preferenceFourteen: "com.android.support:preference-v14:$androidSupportVersion",
            recyclerView: "com.android.support:recyclerview-v7:$androidSupportVersion",
            supportAnnotations: "com.android.support:support-annotations:$androidSupportVersion",
            supportFour: "com.android.support:support-v4:$androidSupportVersion",
            supportThirteen: "com.android.support:support-v13:$androidSupportVersion"
    ]

    //Note: I do not use Google's data binding as I use RxJava instead

    //acceptance testing libs
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
    powermockVersion = '1.6.2'
    assertjJunitVersion = '2.2.0'

    acceptanceTestingDependencies = [
            junit: "junit:junit:$junitVersion",
            mockito: "org.mockito:mockito-core:$mockitoVersion",
            powermock: "org.powermock:powermock-api-mockito:$powermockVersion",
            assertjCore:"org.assertj:assertj-core:$assertjJunitVersion"
    ]

    //instrumented testing libs
    // note: hamcrest
    // is picked up as deps by espresso-core so there is no need to
    // include these as app deps as we are always including espresso-core as
    // an app dependency
    espressoContribVersion = '2.2.1'
    espressoCoreVersion = '2.2.1'
    espressoIdlingResourceVersion = '2.2.1'
    espressoIntentsVersion = '2.2.1'
    espressoWebVersion = '2.2.1'
    espressoRulesVersion = '0.4.1'
    espressoRunnerVersion = '0.4.1'
    espressoTestingSupportLibVersion = '0.1'
    espressUIAutomatorVersion = '2.1.2'

    assertjVersion = '1.1.0'

    jacocoVersion = '0.7.4.201502262128'

    spoonClientVersion = '1.1.10'

    gwsdroidinsutilVersion = '1.0.0.4'

    // remember to adjust allprojects block above per dep resolution strategy as
    // usually the android support annotations with espresso is usually out-of-synch with the
    // sdk
    instrumentedTestDependencies = [
            espressoContrib: "com.android.support.test.espresso:espresso-contrib:$espressoContribVersion",
            espressoCore: "com.android.support.test.espresso:espresso-core:$espressoCoreVersion",
            espressoIdlingResource: "com.android.support.test.espresso:espresso-idling-resource:$espressoIdlingResourceVersion",
            espressoIntents: "com.android.support.test.espresso:espresso-intents:$espressoIntentsVersion",
            espressoWeb: "com.android.support.test.espresso:espresso-web:$espressoWebVersion",
            espressoRules: "com.android.support.test:rules:$espressoRulesVersion",
            espressoRunner: "com.android.support.test:runner:$espressoRunnerVersion",
            assertjAndroid: "com.squareup.assertj:assertj-android:$assertjVersion",
            assertjSupportFour: "com.squareup.assertj:assertj-android-support-v4:$assertjVersion",
            assertjPlayServices: "com.squareup.assertj:assertj-android-play-services:$assertjVersion",
            assertjAppCompat:"com.squareup.assertj:assertj-android-appcompat-v7:$assertjVersion",
            assertjDesign:"com.squareup.assertj:assertj-android-design:$assertjVersion",
            assertjMediarouter:"com.squareup.assertj:assertj-android-mediarouter-v7:$assertjVersion",
            assertjGridlayout:"com.squareup.assertj:assertj-android-gridlayout-v7:$assertjVersion",
            assertjCardview:"com.squareup.assertj:assertj-android-cardview-v7:$assertjVersion",
            assertjRecyclerview:"com.squareup.assertj:assertj-android-recyclerview-v7:$assertjVersion",
            assertjPalette:"com.squareup.assertj:assertj-android-palette-v7:$assertjVersion",
            spoonClient:"com.squareup.spoon:spoon-client:$spoonClientVersion",
            gwsdroidinsutil:"com.github.shareme:GWSDroidInsUtil:$gwsdroidinsutilVersion@aar"

    ]


    //google play services dependencies
    playServicesVersion = '8.3.0'

    playServicesDependencies = [
            playServices: "com.google.android.gms:play-services:$playServicesVersion",
            playServicesAds: "com.google.android.gms:play-services-ads:$playServicesVersion",
            playServicesAllWear:"com.google.android.gms:play-services-all-wear:$playServicesVersion",
            playServicesAnalytics:"com.google.android.gms:play-services-analytics:$playServicesVersion",
            playServicesAppIndexing:"com.google.android.gms:play-services-appindexing:$playServicesVersion",
            playServicesAppInvite:"com.google.android.gms:play-services-appinvite:$playServicesVersion",
            playServicesAppState:"com.google.android.gms:play-services-appstate:$playServicesVersion",
            playServicesBase:"com.google.android.gms:play-services-base:$playServicesVersion",
            playServicesBasement:"com.google.android.gms:play-services-basement:$playServicesVersion",
            playServicesCast:"com.google.android.gms:play-services-cast:$playServicesVersion",
            playServicesDrive:"com.google.android.gms:play-services-drive:$playServicesVersion",
            playServicesFitness:"com.google.android.gms:play-services-fitness:$playServicesVersion",
            playServicesGames:"com.google.android.gms:play-services-games:$playServicesVersion",
            playServicesGCM: "com.google.android.gms:play-services-gcm:$playServicesVersion",
            playServicesIdentity: "com.google.android.gms:play-services-identity:$playServicesVersion",
            playServicesLocation: "com.google.android.gms:play-services-location:$playServicesVersion",
            playServicesMaps:"com.google.android.gms:play-services-maps:$playServicesVersion",
            playServicesMeasurement:"com.google.android.gms:play-services-measurement:$playServicesVersion",
            playServicesNearby:"com.google.android.gms:play-services-nearby:$playServicesVersion",
            playServicesPanorama:"com.google.android.gms:play-services-panorama:$playServicesVersion",
            playServicesPlus:"com.google.android.gms:play-services-plus:$playServicesVersion",
            playServicesSafetyNet:"com.google.android.gms:play-services-safetynet:$playServicesVersion",
            playServicesVision:"com.google.android.gms:play-services-vision:$playServicesVersion",
            playServicesWallet:"com.google.android.gms:play-services-wallet:$playServicesVersion",
            playServicesWearable:"com.google.android.gms:play-services-wearable:$playServicesVersion"
    ]

    //other debug dependencies
    dbinspectorVersion = '3.2.1'
    leakCanaryVersion = '1.3.1'
    timberVersion = '4.0.1'
    gwsdroidviewserverVersion = '1.0.0.1'
    gwswakeupVersion = '1.0.0.1'

    debugAppDependencies = [
            //debugCompile
            leakcanaryAndroidDC: "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion",
            //compile
            leakcanaryAndroidNOOPRC: "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion",
            timber:"com.jakewharton.timber:timber:$timberVersion",
            //debugCompile
            dbinspector: "imi.dino:dbinspector:$dbinspectorVersion@aar",
            //debugCompile, gets BuildConfig wrapped as far as method calls
            gwsdroidviewserver:"com.github.shareme:GWSDroidViewServer:$gwsdroidviewserverVersion@aar",
            //debugCompile, gets BuildConfig wrapped as far as method calls
            gwswakeup:"com.github.shareme:GWSWakeUp:$gwswakeupVersion@aar"
    ]

    debugLibraryDependencies = [
            timber:"com.jakewharton.timber:timber:$timberVersion"
    ]

    //rxjava dependencies
    rxandroidVersion = '1.0.1'
    rxjavaVersion = '1.0.14'
    rxbindingVersion = '0.3.0'
    rxlifecycleVersion = '0.3.0'
    sqlbriteVersion = '0.4.0'
    reactivelocationVersion = '0.8'
    rxpreferencesVersion = '1.0.0'

    rxjavaDependencies = [
            rxandroid: "io.reactivex:rxandroid:$rxandroidVersion",
            rxjava:"io.reactivex:rxjava:$rxjavaVersion",
            rxbinding:"com.jakewharton.rxbinding:rxbinding:$rxbindingVersion",
            rxbindingSupportFour:"com.jakewharton.rxbinding:rxbinding-support-v4:$rxbindingVersion",
            rxbindingAppCompat:"com.jakewharton.rxbinding:rxbinding-appcompat-v7:$rxbindingVersion",
            rxbindingDesign:"com.jakewharton.rxbinding:rxbinding-design:$rxbindingVersion",
            rxbindingLeanback: "com.jakewharton.rxbinding:rxbinding-leanback-v17:$rxbindingVersion",
            rxbindingRecycler:"com.jakewharton.rxbinding:rxbinding-recyclerview-v7:$rxbindingVersion",
            rxlifecycle:"com.trello:rxlifecycle:$rxlifecycleVersion",
            rxlifecycleComponents:"com.trello:rxlifecycle-components:$rxlifecycleVersion",
            sqlbrite:"com.squareup.sqlbrite:sqlbrite:$sqlbriteVersion",
            reactivelocation:"pl.charmas.android:android-reactivve-location:$reactivelocationVersion@aar",
            rxpreferences:"com.f2prateek.rx.preferences:rx-preferences:$rxpreferencesVersion"

    ]

    //lombok libs as we only use lombok on the app side not the library side at the
    //moment and that can change
    lombokVersion = '1.12.6'

    //remember that we need do a delombok task to adjust the javadocs and need the
    //lombok jar in folder other than libs os that its not picked-up as a compile dep.
    lombokDependencies = [
            //provided
           lombok:"org.projectlombok:lombok:$lombokVersion"
    ]

    //dagger libs
    daggerVersion = '2.0.2'
    daggerProducersVersion = '2.0-beta'
    javaxJsr250Version = '1.0'

    daggerDependencies = [
            //compile
            daggerCore: "com.google.dagger:dager:$daggerVersion",
            //apt
            daggerCompiler:"com.google.dagger:dagger-compiler:$daggerVersion",
            //apt
            javaxJsr250:"javax.annotation:jsr250-api:$javaxJsr250Version"
    ]


    //third party libs
    androidtransformerVersion = '1.2'
    butterknifeVersion = '7.0.1'
    coordinatorVersion = '1.1.5'
    gwsindiainkVersion = '1.0.0.1'
    gwsrevealVersion = '1.0.0.1'
    gwsrippledecoviewVersion = '1.0.0.1'
    gwssystemuiVersion = '1.0.0.1'
    gwszdepthshadowVersion = '1.0.0.1'
    madgeVersion = '1.1.2'
    picassoVersion = '2.5.2'
    telescopeVersion = '1.5.0'
    wizardVersion = '1.1.1'

    thirdPartyDependencies = [
            //compile
            androidtransformer: "com.mobandme:android-transformer:$androidtransformerVersion",
            //apt
            androidtransformerCompiler:"com.mobandme:android-transformer-compiler:$androidtransformerVersion",
            //compile
            coordinator:"me.panavtec:coordinator:$coordinatorVersion",
            //apt
            coordinatorCompiler:"me.panavtec:coordinator-compiler:$coordinatorVersion",
            gwsindiaink:"com.github.shareme:GWSIndiaInk:$gwsindiainkVersion@aar",
            gwsreveal:"com.github.shareme:GWSReveal:$gwsrevealVersion@aar",
            gwsrippledecoview:"com.github.shareme:GWSRippleDecoView:$gwsrippledecoviewVersion@aar",
            gwssystemui:"com.github.shareme:GWSSystemUI:$gwssystemuiVersion@aar",
            gwszdepthshadow:"com.github.shareme:GWSZDepthShadow:$gwszdepthshadowVersion@aar",
            //debugCompile
            madge: "com.jakewharton.madge:madge:$madgeVersion",
            telescope:"com.mattpreciious.telescope:telescope:$telescopeVersion@aar",
            wizard:"me.panavtec:wizard:$wizardVersion"
    ]


}